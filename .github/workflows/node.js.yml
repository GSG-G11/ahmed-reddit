name: PostgreSQL service and nodejs

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env: # Or as an environment variable
  super_secret: ${{ secrets.ACCESS_TOKEN_SECRET }}
  ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present

  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:14

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: root
          POSTGRES_USER: root
          POSTGRES_DB: db_reddit_test
          POSTGRES_PORT: 5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: npm ci

      - name: Connect to PostgreSQL And Testing DB
        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data.
        run: npm run test:database 
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
        env: 
          TEST_DB_URL: postgres://root:root@postgres:5432/db_reddit_test
          # The hostname used to communicate with the PostgreSQL service container
          # The default PostgreSQL port
      - name: Testing router
        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data.
        run: npm run test:router
        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
        env: 
          TEST_DB_URL: postgres://root:root@postgres:5432/db_reddit_test
          # The hostname used to communicate with the PostgreSQL service container
          # The default PostgreSQL port  
